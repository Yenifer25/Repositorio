

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Oct 04 19:20:58 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     _TMR0L	set	4054
    57  0000                     _TMR0H	set	4055
    58  0000                     _T0CONbits	set	4053
    59  0000                     _INTCONbits	set	4082
    60  0000                     _PORTA	set	3968
    61  0000                     _TRISA	set	3986
    62  0000                     _PORTB	set	3969
    63  0000                     _TRISB	set	3987
    64  0000                     _PORTD	set	3971
    65  0000                     _TRISD	set	3989
    66  0000                     _PORTC	set	3970
    67  0000                     _TRISC	set	3988
    68  0000                     _ADCON1	set	4033
    69                           
    70                           ; #config settings
    71                           
    72                           	psect	cinit
    73  0002E2                     __pcinit:
    74                           	callstack 0
    75  0002E2                     start_initialization:
    76                           	callstack 0
    77  0002E2                     __initialization:
    78                           	callstack 0
    79                           
    80                           ; Clear objects allocated to COMRAM (12 bytes)
    81  0002E2  EE00  F001         	lfsr	0,__pbssCOMRAM
    82  0002E6  0E0C               	movlw	12
    83  0002E8                     clear_0:
    84  0002E8  6AEE               	clrf	postinc0,c
    85  0002EA  06E8               	decf	wreg,f,c
    86  0002EC  E1FD               	bnz	clear_0
    87  0002EE                     end_of_initialization:
    88                           	callstack 0
    89  0002EE                     __end_of__initialization:
    90                           	callstack 0
    91  0002EE  9019               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    92  0002F0  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    93  0002F2  0100               	movlb	0
    94  0002F4  EF2C  F001         	goto	_main	;jump to C main() function
    95                           
    96                           	psect	bssCOMRAM
    97  000001                     __pbssCOMRAM:
    98                           	callstack 0
    99  000001                     _BCD:
   100                           	callstack 0
   101  000001                     	ds	2
   102  000003                     _L:
   103                           	callstack 0
   104  000003                     	ds	2
   105  000005                     _H:
   106                           	callstack 0
   107  000005                     	ds	2
   108  000007                     _dec_seg:
   109                           	callstack 0
   110  000007                     	ds	2
   111  000009                     _seg:
   112                           	callstack 0
   113  000009                     	ds	2
   114  00000B                     _min:
   115                           	callstack 0
   116  00000B                     	ds	2
   117                           
   118                           	psect	cstackCOMRAM
   119  00000D                     __pcstackCOMRAM:
   120                           	callstack 0
   121  00000D                     ?_visualizar_decseg:
   122                           	callstack 0
   123  00000D                     ?_visualizar_seg:
   124                           	callstack 0
   125  00000D                     ?_visualizar_min:
   126                           	callstack 0
   127                           
   128                           ; 2 bytes @ 0x0
   129  00000D                     	ds	2
   130  00000F                     ??_visualizar_decseg:
   131  00000F                     ??_visualizar_seg:
   132  00000F                     ??_visualizar_min:
   133                           
   134                           ; 1 bytes @ 0x2
   135  00000F                     	ds	2
   136  000011                     visualizar_decseg@valor:
   137                           	callstack 0
   138  000011                     visualizar_seg@valor:
   139                           	callstack 0
   140  000011                     visualizar_min@valor:
   141                           	callstack 0
   142                           
   143                           ; 2 bytes @ 0x4
   144  000011                     	ds	2
   145  000013                     main@x:
   146                           	callstack 0
   147                           
   148                           ; 2 bytes @ 0x6
   149  000013                     	ds	2
   150  000015                     main@y:
   151                           	callstack 0
   152                           
   153                           ; 2 bytes @ 0x8
   154  000015                     	ds	2
   155  000017                     main@z:
   156                           	callstack 0
   157                           
   158                           ; 2 bytes @ 0xA
   159  000017                     	ds	2
   160                           
   161 ;;
   162 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   163 ;;
   164 ;; *************** function _main *****************
   165 ;; Defined at:
   166 ;;		line 47 in file "TIMER.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;		None
   169 ;; Auto vars:     Size  Location     Type
   170 ;;  z               2   10[COMRAM] int 
   171 ;;  y               2    8[COMRAM] int 
   172 ;;  x               2    6[COMRAM] int 
   173 ;; Return value:  Size  Location     Type
   174 ;;                  1    wreg      void 
   175 ;; Registers used:
   176 ;;		wreg, status,2, status,0, cstack
   177 ;; Tracked objects:
   178 ;;		On entry : 0/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   182 ;;      Params:         0       0       0       0       0       0       0       0       0
   183 ;;      Locals:         6       0       0       0       0       0       0       0       0
   184 ;;      Temps:          0       0       0       0       0       0       0       0       0
   185 ;;      Totals:         6       0       0       0       0       0       0       0       0
   186 ;;Total ram usage:        6 bytes
   187 ;; Hardware stack levels required when called:    2
   188 ;; This function calls:
   189 ;;		_TIMER0
   190 ;;		_inicializar_puertos
   191 ;;		_visualizar_decseg
   192 ;;		_visualizar_min
   193 ;;		_visualizar_seg
   194 ;; This function is called by:
   195 ;;		Startup code after reset
   196 ;; This function uses a non-reentrant model
   197 ;;
   198                           
   199                           	psect	text0
   200  000258                     __ptext0:
   201                           	callstack 0
   202  000258                     _main:
   203                           	callstack 29
   204  000258                     
   205                           ;TIMER.c: 49:     inicializar_puertos();
   206  000258  EC50  F001         	call	_inicializar_puertos	;wreg free
   207                           
   208                           ;TIMER.c: 50:     TIMER0();
   209  00025C  EC63  F001         	call	_TIMER0	;wreg free
   210  000260                     
   211                           ;TIMER.c: 52:     TMR0H=(60536)>>8;
   212  000260  0EEC               	movlw	236
   213  000262  6ED7               	movwf	215,c	;volatile
   214  000264                     
   215                           ;TIMER.c: 53:     TMR0L=60536;
   216  000264  0E78               	movlw	120
   217  000266  6ED6               	movwf	214,c	;volatile
   218  000268                     l933:
   219                           
   220                           ;TIMER.c: 56:     {;TIMER.c: 57:     int x=visualizar_decseg();
   221  000268  ECA1  F000         	call	_visualizar_decseg	;wreg free
   222  00026C  C00D  F013         	movff	?_visualizar_decseg,main@x
   223  000270  C00E  F014         	movff	?_visualizar_decseg+1,main@x+1
   224  000274                     
   225                           ;TIMER.c: 58:     PORTD=x;
   226  000274  C013  FF83         	movff	main@x,3971	;volatile
   227  000278                     
   228                           ;TIMER.c: 59:     int y=visualizar_seg();
   229  000278  EC09  F000         	call	_visualizar_seg	;wreg free
   230  00027C  C00D  F015         	movff	?_visualizar_seg,main@y
   231  000280  C00E  F016         	movff	?_visualizar_seg+1,main@y+1
   232  000284                     
   233                           ;TIMER.c: 60:     PORTB=y;
   234  000284  C015  FF81         	movff	main@y,3969	;volatile
   235  000288                     
   236                           ;TIMER.c: 61:     int z=visualizar_min();
   237  000288  EC55  F000         	call	_visualizar_min	;wreg free
   238  00028C  C00D  F017         	movff	?_visualizar_min,main@z
   239  000290  C00E  F018         	movff	?_visualizar_min+1,main@z+1
   240  000294                     
   241                           ;TIMER.c: 62:     PORTA=z;
   242  000294  C017  FF80         	movff	main@z,3968	;volatile
   243  000298  EF34  F001         	goto	l933
   244  00029C  EF07  F000         	goto	start
   245  0002A0                     __end_of_main:
   246                           	callstack 0
   247                           
   248 ;; *************** function _visualizar_seg *****************
   249 ;; Defined at:
   250 ;;		line 117 in file "TIMER.c"
   251 ;; Parameters:    Size  Location     Type
   252 ;;		None
   253 ;; Auto vars:     Size  Location     Type
   254 ;;  valor           2    4[COMRAM] int 
   255 ;; Return value:  Size  Location     Type
   256 ;;                  2    0[COMRAM] int 
   257 ;; Registers used:
   258 ;;		wreg, status,2, status,0
   259 ;; Tracked objects:
   260 ;;		On entry : 0/0
   261 ;;		On exit  : 0/0
   262 ;;		Unchanged: 0/0
   263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   264 ;;      Params:         2       0       0       0       0       0       0       0       0
   265 ;;      Locals:         2       0       0       0       0       0       0       0       0
   266 ;;      Temps:          2       0       0       0       0       0       0       0       0
   267 ;;      Totals:         6       0       0       0       0       0       0       0       0
   268 ;;Total ram usage:        6 bytes
   269 ;; Hardware stack levels used:    1
   270 ;; Hardware stack levels required when called:    1
   271 ;; This function calls:
   272 ;;		Nothing
   273 ;; This function is called by:
   274 ;;		_main
   275 ;; This function uses a non-reentrant model
   276 ;;
   277                           
   278                           	psect	text1
   279  000012                     __ptext1:
   280                           	callstack 0
   281  000012                     _visualizar_seg:
   282                           	callstack 29
   283  000012                     
   284                           ;TIMER.c: 119:     int valor=seg;
   285  000012  C009  F011         	movff	_seg,visualizar_seg@valor
   286  000016  C00A  F012         	movff	_seg+1,visualizar_seg@valor+1
   287  00001A                     
   288                           ;TIMER.c: 120:     H=0;
   289  00001A  0E00               	movlw	0
   290  00001C  6E06               	movwf	(_H+1)^0,c
   291  00001E  0E00               	movlw	0
   292  000020  6E05               	movwf	_H^0,c
   293  000022                     
   294                           ;TIMER.c: 122:     if(valor>=10)
   295  000022  BE12               	btfsc	(visualizar_seg@valor+1)^0,7,c
   296  000024  EF1D  F000         	goto	u131
   297  000028  5012               	movf	(visualizar_seg@valor+1)^0,w,c
   298  00002A  E109               	bnz	u130
   299  00002C  0E0A               	movlw	10
   300  00002E  5C11               	subwf	visualizar_seg@valor^0,w,c
   301  000030  A0D8               	btfss	status,0,c
   302  000032  EF1D  F000         	goto	u131
   303  000036  EF1F  F000         	goto	u130
   304  00003A                     u131:
   305  00003A  EF35  F000         	goto	l76
   306  00003E                     u130:
   307  00003E                     l897:
   308                           
   309                           ;TIMER.c: 125:         {;TIMER.c: 126:             valor=valor-10;
   310  00003E  0EF6               	movlw	246
   311  000040  2411               	addwf	visualizar_seg@valor^0,w,c
   312  000042  6E11               	movwf	visualizar_seg@valor^0,c
   313  000044  0EFF               	movlw	255
   314  000046  2012               	addwfc	(visualizar_seg@valor+1)^0,w,c
   315  000048  6E12               	movwf	(visualizar_seg@valor+1)^0,c
   316  00004A                     
   317                           ;TIMER.c: 127:             H++;
   318  00004A  4A05               	infsnz	_H^0,f,c
   319  00004C  2A06               	incf	(_H+1)^0,f,c
   320  00004E                     
   321                           ;TIMER.c: 128:         }
   322  00004E  BE12               	btfsc	(visualizar_seg@valor+1)^0,7,c
   323  000050  EF35  F000         	goto	u140
   324  000054  5012               	movf	(visualizar_seg@valor+1)^0,w,c
   325  000056  E107               	bnz	u141
   326  000058  0E0A               	movlw	10
   327  00005A  5C11               	subwf	visualizar_seg@valor^0,w,c
   328  00005C  B0D8               	btfsc	status,0,c
   329  00005E  EF33  F000         	goto	u141
   330  000062  EF35  F000         	goto	u140
   331  000066                     u141:
   332  000066  EF1F  F000         	goto	l897
   333  00006A                     u140:
   334  00006A                     l76:
   335                           
   336                           ;TIMER.c: 131:     L=valor;
   337  00006A  C011  F003         	movff	visualizar_seg@valor,_L
   338  00006E  C012  F004         	movff	visualizar_seg@valor+1,_L+1
   339  000072                     
   340                           ;TIMER.c: 132:     H=H<<4;
   341  000072  C005  F00F         	movff	_H,??_visualizar_seg
   342  000076  C006  F010         	movff	_H+1,??_visualizar_seg+1
   343  00007A  3A0F               	swapf	??_visualizar_seg^0,f,c
   344  00007C  3A10               	swapf	(??_visualizar_seg+1)^0,f,c
   345  00007E  0EF0               	movlw	240
   346  000080  1610               	andwf	(??_visualizar_seg+1)^0,f,c
   347  000082  500F               	movf	??_visualizar_seg^0,w,c
   348  000084  0B0F               	andlw	15
   349  000086  1210               	iorwf	(??_visualizar_seg+1)^0,f,c
   350  000088  0EF0               	movlw	240
   351  00008A  160F               	andwf	??_visualizar_seg^0,f,c
   352  00008C  C00F  F005         	movff	??_visualizar_seg,_H
   353  000090  C010  F006         	movff	??_visualizar_seg+1,_H+1
   354                           
   355                           ;TIMER.c: 133:     BCD=H|L;
   356  000094  5003               	movf	_L^0,w,c
   357  000096  1005               	iorwf	_H^0,w,c
   358  000098  6E01               	movwf	_BCD^0,c
   359  00009A  5004               	movf	(_L+1)^0,w,c
   360  00009C  1006               	iorwf	(_H+1)^0,w,c
   361  00009E  6E02               	movwf	(_BCD+1)^0,c
   362  0000A0                     
   363                           ;TIMER.c: 135:     return BCD;
   364  0000A0  C001  F00D         	movff	_BCD,?_visualizar_seg
   365  0000A4  C002  F00E         	movff	_BCD+1,?_visualizar_seg+1
   366  0000A8  0012               	return		;funcret
   367  0000AA                     __end_of_visualizar_seg:
   368                           	callstack 0
   369                           
   370 ;; *************** function _visualizar_min *****************
   371 ;; Defined at:
   372 ;;		line 138 in file "TIMER.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;  valor           2    4[COMRAM] int 
   377 ;; Return value:  Size  Location     Type
   378 ;;                  2    0[COMRAM] int 
   379 ;; Registers used:
   380 ;;		wreg, status,2, status,0
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   386 ;;      Params:         2       0       0       0       0       0       0       0       0
   387 ;;      Locals:         2       0       0       0       0       0       0       0       0
   388 ;;      Temps:          2       0       0       0       0       0       0       0       0
   389 ;;      Totals:         6       0       0       0       0       0       0       0       0
   390 ;;Total ram usage:        6 bytes
   391 ;; Hardware stack levels used:    1
   392 ;; Hardware stack levels required when called:    1
   393 ;; This function calls:
   394 ;;		Nothing
   395 ;; This function is called by:
   396 ;;		_main
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           	psect	text2
   401  0000AA                     __ptext2:
   402                           	callstack 0
   403  0000AA                     _visualizar_min:
   404                           	callstack 29
   405  0000AA                     
   406                           ;TIMER.c: 140:     int valor=min;
   407  0000AA  C00B  F011         	movff	_min,visualizar_min@valor
   408  0000AE  C00C  F012         	movff	_min+1,visualizar_min@valor+1
   409  0000B2                     
   410                           ;TIMER.c: 141:     H=0;
   411  0000B2  0E00               	movlw	0
   412  0000B4  6E06               	movwf	(_H+1)^0,c
   413  0000B6  0E00               	movlw	0
   414  0000B8  6E05               	movwf	_H^0,c
   415  0000BA                     
   416                           ;TIMER.c: 143:     if(valor>=10)
   417  0000BA  BE12               	btfsc	(visualizar_min@valor+1)^0,7,c
   418  0000BC  EF69  F000         	goto	u151
   419  0000C0  5012               	movf	(visualizar_min@valor+1)^0,w,c
   420  0000C2  E109               	bnz	u150
   421  0000C4  0E0A               	movlw	10
   422  0000C6  5C11               	subwf	visualizar_min@valor^0,w,c
   423  0000C8  A0D8               	btfss	status,0,c
   424  0000CA  EF69  F000         	goto	u151
   425  0000CE  EF6B  F000         	goto	u150
   426  0000D2                     u151:
   427  0000D2  EF81  F000         	goto	l82
   428  0000D6                     u150:
   429  0000D6                     l915:
   430                           
   431                           ;TIMER.c: 146:         {;TIMER.c: 147:             valor=valor-10;
   432  0000D6  0EF6               	movlw	246
   433  0000D8  2411               	addwf	visualizar_min@valor^0,w,c
   434  0000DA  6E11               	movwf	visualizar_min@valor^0,c
   435  0000DC  0EFF               	movlw	255
   436  0000DE  2012               	addwfc	(visualizar_min@valor+1)^0,w,c
   437  0000E0  6E12               	movwf	(visualizar_min@valor+1)^0,c
   438  0000E2                     
   439                           ;TIMER.c: 148:             H++;
   440  0000E2  4A05               	infsnz	_H^0,f,c
   441  0000E4  2A06               	incf	(_H+1)^0,f,c
   442  0000E6                     
   443                           ;TIMER.c: 149:         }
   444  0000E6  BE12               	btfsc	(visualizar_min@valor+1)^0,7,c
   445  0000E8  EF81  F000         	goto	u160
   446  0000EC  5012               	movf	(visualizar_min@valor+1)^0,w,c
   447  0000EE  E107               	bnz	u161
   448  0000F0  0E0A               	movlw	10
   449  0000F2  5C11               	subwf	visualizar_min@valor^0,w,c
   450  0000F4  B0D8               	btfsc	status,0,c
   451  0000F6  EF7F  F000         	goto	u161
   452  0000FA  EF81  F000         	goto	u160
   453  0000FE                     u161:
   454  0000FE  EF6B  F000         	goto	l915
   455  000102                     u160:
   456  000102                     l82:
   457                           
   458                           ;TIMER.c: 152:     L=valor;
   459  000102  C011  F003         	movff	visualizar_min@valor,_L
   460  000106  C012  F004         	movff	visualizar_min@valor+1,_L+1
   461  00010A                     
   462                           ;TIMER.c: 153:     H=H<<4;
   463  00010A  C005  F00F         	movff	_H,??_visualizar_min
   464  00010E  C006  F010         	movff	_H+1,??_visualizar_min+1
   465  000112  3A0F               	swapf	??_visualizar_min^0,f,c
   466  000114  3A10               	swapf	(??_visualizar_min+1)^0,f,c
   467  000116  0EF0               	movlw	240
   468  000118  1610               	andwf	(??_visualizar_min+1)^0,f,c
   469  00011A  500F               	movf	??_visualizar_min^0,w,c
   470  00011C  0B0F               	andlw	15
   471  00011E  1210               	iorwf	(??_visualizar_min+1)^0,f,c
   472  000120  0EF0               	movlw	240
   473  000122  160F               	andwf	??_visualizar_min^0,f,c
   474  000124  C00F  F005         	movff	??_visualizar_min,_H
   475  000128  C010  F006         	movff	??_visualizar_min+1,_H+1
   476                           
   477                           ;TIMER.c: 154:     BCD=H|L;
   478  00012C  5003               	movf	_L^0,w,c
   479  00012E  1005               	iorwf	_H^0,w,c
   480  000130  6E01               	movwf	_BCD^0,c
   481  000132  5004               	movf	(_L+1)^0,w,c
   482  000134  1006               	iorwf	(_H+1)^0,w,c
   483  000136  6E02               	movwf	(_BCD+1)^0,c
   484  000138                     
   485                           ;TIMER.c: 156:     return BCD;
   486  000138  C001  F00D         	movff	_BCD,?_visualizar_min
   487  00013C  C002  F00E         	movff	_BCD+1,?_visualizar_min+1
   488  000140  0012               	return		;funcret
   489  000142                     __end_of_visualizar_min:
   490                           	callstack 0
   491                           
   492 ;; *************** function _visualizar_decseg *****************
   493 ;; Defined at:
   494 ;;		line 95 in file "TIMER.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;  valor           2    4[COMRAM] int 
   499 ;; Return value:  Size  Location     Type
   500 ;;                  2    0[COMRAM] int 
   501 ;; Registers used:
   502 ;;		wreg, status,2, status,0
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   508 ;;      Params:         2       0       0       0       0       0       0       0       0
   509 ;;      Locals:         2       0       0       0       0       0       0       0       0
   510 ;;      Temps:          2       0       0       0       0       0       0       0       0
   511 ;;      Totals:         6       0       0       0       0       0       0       0       0
   512 ;;Total ram usage:        6 bytes
   513 ;; Hardware stack levels used:    1
   514 ;; Hardware stack levels required when called:    1
   515 ;; This function calls:
   516 ;;		Nothing
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text3
   523  000142                     __ptext3:
   524                           	callstack 0
   525  000142                     _visualizar_decseg:
   526                           	callstack 29
   527  000142                     
   528                           ;TIMER.c: 97:     int valor=dec_seg;
   529  000142  C007  F011         	movff	_dec_seg,visualizar_decseg@valor
   530  000146  C008  F012         	movff	_dec_seg+1,visualizar_decseg@valor+1
   531  00014A                     
   532                           ;TIMER.c: 98:     H=0;
   533  00014A  0E00               	movlw	0
   534  00014C  6E06               	movwf	(_H+1)^0,c
   535  00014E  0E00               	movlw	0
   536  000150  6E05               	movwf	_H^0,c
   537  000152                     
   538                           ;TIMER.c: 100:     if(valor>=10)
   539  000152  BE12               	btfsc	(visualizar_decseg@valor+1)^0,7,c
   540  000154  EFB5  F000         	goto	u111
   541  000158  5012               	movf	(visualizar_decseg@valor+1)^0,w,c
   542  00015A  E109               	bnz	u110
   543  00015C  0E0A               	movlw	10
   544  00015E  5C11               	subwf	visualizar_decseg@valor^0,w,c
   545  000160  A0D8               	btfss	status,0,c
   546  000162  EFB5  F000         	goto	u111
   547  000166  EFB7  F000         	goto	u110
   548  00016A                     u111:
   549  00016A  EFCD  F000         	goto	l70
   550  00016E                     u110:
   551  00016E                     l879:
   552                           
   553                           ;TIMER.c: 103:         {;TIMER.c: 104:             valor=valor-10;
   554  00016E  0EF6               	movlw	246
   555  000170  2411               	addwf	visualizar_decseg@valor^0,w,c
   556  000172  6E11               	movwf	visualizar_decseg@valor^0,c
   557  000174  0EFF               	movlw	255
   558  000176  2012               	addwfc	(visualizar_decseg@valor+1)^0,w,c
   559  000178  6E12               	movwf	(visualizar_decseg@valor+1)^0,c
   560  00017A                     
   561                           ;TIMER.c: 105:             H++;
   562  00017A  4A05               	infsnz	_H^0,f,c
   563  00017C  2A06               	incf	(_H+1)^0,f,c
   564  00017E                     
   565                           ;TIMER.c: 106:         }
   566  00017E  BE12               	btfsc	(visualizar_decseg@valor+1)^0,7,c
   567  000180  EFCD  F000         	goto	u120
   568  000184  5012               	movf	(visualizar_decseg@valor+1)^0,w,c
   569  000186  E107               	bnz	u121
   570  000188  0E0A               	movlw	10
   571  00018A  5C11               	subwf	visualizar_decseg@valor^0,w,c
   572  00018C  B0D8               	btfsc	status,0,c
   573  00018E  EFCB  F000         	goto	u121
   574  000192  EFCD  F000         	goto	u120
   575  000196                     u121:
   576  000196  EFB7  F000         	goto	l879
   577  00019A                     u120:
   578  00019A                     l70:
   579                           
   580                           ;TIMER.c: 109:     L=valor;
   581  00019A  C011  F003         	movff	visualizar_decseg@valor,_L
   582  00019E  C012  F004         	movff	visualizar_decseg@valor+1,_L+1
   583  0001A2                     
   584                           ;TIMER.c: 110:     H=H<<4;
   585  0001A2  C005  F00F         	movff	_H,??_visualizar_decseg
   586  0001A6  C006  F010         	movff	_H+1,??_visualizar_decseg+1
   587  0001AA  3A0F               	swapf	??_visualizar_decseg^0,f,c
   588  0001AC  3A10               	swapf	(??_visualizar_decseg+1)^0,f,c
   589  0001AE  0EF0               	movlw	240
   590  0001B0  1610               	andwf	(??_visualizar_decseg+1)^0,f,c
   591  0001B2  500F               	movf	??_visualizar_decseg^0,w,c
   592  0001B4  0B0F               	andlw	15
   593  0001B6  1210               	iorwf	(??_visualizar_decseg+1)^0,f,c
   594  0001B8  0EF0               	movlw	240
   595  0001BA  160F               	andwf	??_visualizar_decseg^0,f,c
   596  0001BC  C00F  F005         	movff	??_visualizar_decseg,_H
   597  0001C0  C010  F006         	movff	??_visualizar_decseg+1,_H+1
   598                           
   599                           ;TIMER.c: 111:     BCD=H|L;
   600  0001C4  5003               	movf	_L^0,w,c
   601  0001C6  1005               	iorwf	_H^0,w,c
   602  0001C8  6E01               	movwf	_BCD^0,c
   603  0001CA  5004               	movf	(_L+1)^0,w,c
   604  0001CC  1006               	iorwf	(_H+1)^0,w,c
   605  0001CE  6E02               	movwf	(_BCD+1)^0,c
   606  0001D0                     
   607                           ;TIMER.c: 113:     return BCD;
   608  0001D0  C001  F00D         	movff	_BCD,?_visualizar_decseg
   609  0001D4  C002  F00E         	movff	_BCD+1,?_visualizar_decseg+1
   610  0001D8  0012               	return		;funcret
   611  0001DA                     __end_of_visualizar_decseg:
   612                           	callstack 0
   613                           
   614 ;; *************** function _inicializar_puertos *****************
   615 ;; Defined at:
   616 ;;		line 18 in file "TIMER.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, status,2
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   630 ;;      Params:         0       0       0       0       0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0       0       0       0       0
   633 ;;      Totals:         0       0       0       0       0       0       0       0       0
   634 ;;Total ram usage:        0 bytes
   635 ;; Hardware stack levels used:    1
   636 ;; Hardware stack levels required when called:    1
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text4
   645  0002A0                     __ptext4:
   646                           	callstack 0
   647  0002A0                     _inicializar_puertos:
   648                           	callstack 29
   649  0002A0                     
   650                           ;TIMER.c: 20:     ADCON1=0b00001111;
   651  0002A0  0E0F               	movlw	15
   652  0002A2  6EC1               	movwf	193,c	;volatile
   653                           
   654                           ;TIMER.c: 21:     TRISC=0;
   655  0002A4  0E00               	movlw	0
   656  0002A6  6E94               	movwf	148,c	;volatile
   657                           
   658                           ;TIMER.c: 22:     PORTC=0;
   659  0002A8  0E00               	movlw	0
   660  0002AA  6E82               	movwf	130,c	;volatile
   661                           
   662                           ;TIMER.c: 24:     TRISD=0;
   663  0002AC  0E00               	movlw	0
   664  0002AE  6E95               	movwf	149,c	;volatile
   665                           
   666                           ;TIMER.c: 25:     PORTD=0;
   667  0002B0  0E00               	movlw	0
   668  0002B2  6E83               	movwf	131,c	;volatile
   669                           
   670                           ;TIMER.c: 27:     TRISB=0;
   671  0002B4  0E00               	movlw	0
   672  0002B6  6E93               	movwf	147,c	;volatile
   673                           
   674                           ;TIMER.c: 28:     PORTB=0;
   675  0002B8  0E00               	movlw	0
   676  0002BA  6E81               	movwf	129,c	;volatile
   677                           
   678                           ;TIMER.c: 30:     TRISA=0;
   679  0002BC  0E00               	movlw	0
   680  0002BE  6E92               	movwf	146,c	;volatile
   681                           
   682                           ;TIMER.c: 31:     PORTA=0;
   683  0002C0  0E00               	movlw	0
   684  0002C2  6E80               	movwf	128,c	;volatile
   685  0002C4  0012               	return		;funcret
   686  0002C6                     __end_of_inicializar_puertos:
   687                           	callstack 0
   688                           
   689 ;; *************** function _TIMER0 *****************
   690 ;; Defined at:
   691 ;;		line 33 in file "TIMER.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, status,2
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   705 ;;      Params:         0       0       0       0       0       0       0       0       0
   706 ;;      Locals:         0       0       0       0       0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0       0       0
   708 ;;      Totals:         0       0       0       0       0       0       0       0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    1
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_main
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text5
   720  0002C6                     __ptext5:
   721                           	callstack 0
   722  0002C6                     _TIMER0:
   723                           	callstack 29
   724  0002C6                     
   725                           ;TIMER.c: 35:    INTCONbits.GIE=0;
   726  0002C6  9EF2               	bcf	242,7,c	;volatile
   727                           
   728                           ;TIMER.c: 36:    T0CONbits.T0CS=0;
   729  0002C8  9AD5               	bcf	213,5,c	;volatile
   730                           
   731                           ;TIMER.c: 37:    T0CONbits.PSA=0;
   732  0002CA  96D5               	bcf	213,3,c	;volatile
   733  0002CC                     
   734                           ;TIMER.c: 38:    T0CONbits.T0PS=0b001;
   735  0002CC  50D5               	movf	213,w,c	;volatile
   736  0002CE  0BF8               	andlw	-8
   737  0002D0  0901               	iorlw	1
   738  0002D2  6ED5               	movwf	213,c	;volatile
   739  0002D4                     
   740                           ;TIMER.c: 39:    T0CONbits.T08BIT=0;
   741  0002D4  9CD5               	bcf	213,6,c	;volatile
   742  0002D6                     
   743                           ;TIMER.c: 40:    T0CONbits.TMR0ON=1;
   744  0002D6  8ED5               	bsf	213,7,c	;volatile
   745  0002D8                     
   746                           ;TIMER.c: 41:    INTCONbits.TMR0IF=0;
   747  0002D8  94F2               	bcf	242,2,c	;volatile
   748  0002DA                     
   749                           ;TIMER.c: 42:    INTCONbits.TMR0IE=1;
   750  0002DA  8AF2               	bsf	242,5,c	;volatile
   751  0002DC                     
   752                           ;TIMER.c: 43:    INTCONbits.PEIE=1;
   753  0002DC  8CF2               	bsf	242,6,c	;volatile
   754  0002DE                     
   755                           ;TIMER.c: 44:    INTCONbits.GIE=1;
   756  0002DE  8EF2               	bsf	242,7,c	;volatile
   757  0002E0  0012               	return		;funcret
   758  0002E2                     __end_of_TIMER0:
   759                           	callstack 0
   760                           
   761 ;; *************** function _timer_0 *****************
   762 ;; Defined at:
   763 ;;		line 67 in file "TIMER.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   777 ;;      Params:         0       0       0       0       0       0       0       0       0
   778 ;;      Locals:         0       0       0       0       0       0       0       0       0
   779 ;;      Temps:          0       0       0       0       0       0       0       0       0
   780 ;;      Totals:         0       0       0       0       0       0       0       0       0
   781 ;;Total ram usage:        0 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; This function calls:
   784 ;;		Nothing
   785 ;; This function is called by:
   786 ;;		Interrupt level 2
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           	psect	intcode
   791  000008                     __pintcode:
   792                           	callstack 0
   793  000008                     _timer_0:
   794                           	callstack 29
   795                           
   796                           ;incstack = 0
   797  000008  8219               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   798  00000A  EDED  F000         	call	int_func,f	;refresh shadow registers
   799                           
   800                           	psect	intcode_body
   801  0001DA                     __pintcode_body:
   802                           	callstack 29
   803  0001DA                     int_func:
   804                           	callstack 29
   805  0001DA  0006               	pop		; remove dummy address from shadow register refresh
   806  0001DC                     
   807                           ;TIMER.c: 69:     if(INTCONbits.TMR0IF)
   808  0001DC  A4F2               	btfss	242,2,c	;volatile
   809  0001DE  EFF3  F000         	goto	i2u7_41
   810  0001E2  EFF5  F000         	goto	i2u7_40
   811  0001E6                     i2u7_41:
   812  0001E6  EF2A  F001         	goto	i2l67
   813  0001EA                     i2u7_40:
   814  0001EA                     
   815                           ;TIMER.c: 70:     {;TIMER.c: 71:         dec_seg++;
   816  0001EA  4A07               	infsnz	_dec_seg^0,f,c
   817  0001EC  2A08               	incf	(_dec_seg+1)^0,f,c
   818  0001EE                     
   819                           ;TIMER.c: 72:         if(dec_seg==60)
   820  0001EE  0E3C               	movlw	60
   821  0001F0  1807               	xorwf	_dec_seg^0,w,c
   822  0001F2  1008               	iorwf	(_dec_seg+1)^0,w,c
   823  0001F4  A4D8               	btfss	status,2,c
   824  0001F6  EFFF  F000         	goto	i2u8_41
   825  0001FA  EF01  F001         	goto	i2u8_40
   826  0001FE                     i2u8_41:
   827  0001FE  EF07  F001         	goto	i2l861
   828  000202                     i2u8_40:
   829  000202                     
   830                           ;TIMER.c: 73:         {;TIMER.c: 74:             seg++;
   831  000202  4A09               	infsnz	_seg^0,f,c
   832  000204  2A0A               	incf	(_seg+1)^0,f,c
   833  000206                     
   834                           ;TIMER.c: 75:             dec_seg=0;
   835  000206  0E00               	movlw	0
   836  000208  6E08               	movwf	(_dec_seg+1)^0,c
   837  00020A  0E00               	movlw	0
   838  00020C  6E07               	movwf	_dec_seg^0,c
   839  00020E                     i2l861:
   840                           
   841                           ;TIMER.c: 77:         if(seg==60)
   842  00020E  0E3C               	movlw	60
   843  000210  1809               	xorwf	_seg^0,w,c
   844  000212  100A               	iorwf	(_seg+1)^0,w,c
   845  000214  A4D8               	btfss	status,2,c
   846  000216  EF0F  F001         	goto	i2u9_41
   847  00021A  EF11  F001         	goto	i2u9_40
   848  00021E                     i2u9_41:
   849  00021E  EF17  F001         	goto	i2l867
   850  000222                     i2u9_40:
   851  000222                     
   852                           ;TIMER.c: 78:         {;TIMER.c: 79:             min++;
   853  000222  4A0B               	infsnz	_min^0,f,c
   854  000224  2A0C               	incf	(_min+1)^0,f,c
   855  000226                     
   856                           ;TIMER.c: 80:             seg=0;
   857  000226  0E00               	movlw	0
   858  000228  6E0A               	movwf	(_seg+1)^0,c
   859  00022A  0E00               	movlw	0
   860  00022C  6E09               	movwf	_seg^0,c
   861  00022E                     i2l867:
   862                           
   863                           ;TIMER.c: 82:         if(min==60)
   864  00022E  0E3C               	movlw	60
   865  000230  180B               	xorwf	_min^0,w,c
   866  000232  100C               	iorwf	(_min+1)^0,w,c
   867  000234  A4D8               	btfss	status,2,c
   868  000236  EF1F  F001         	goto	i2u10_41
   869  00023A  EF21  F001         	goto	i2u10_40
   870  00023E                     i2u10_41:
   871  00023E  EF25  F001         	goto	i2l66
   872  000242                     i2u10_40:
   873  000242                     
   874                           ;TIMER.c: 83:         {;TIMER.c: 84:             min=0;
   875  000242  0E00               	movlw	0
   876  000244  6E0C               	movwf	(_min+1)^0,c
   877  000246  0E00               	movlw	0
   878  000248  6E0B               	movwf	_min^0,c
   879  00024A                     i2l66:
   880                           
   881                           ;TIMER.c: 87:         TMR0H=(60536)>>8;
   882  00024A  0EEC               	movlw	236
   883  00024C  6ED7               	movwf	215,c	;volatile
   884                           
   885                           ;TIMER.c: 88:         TMR0L=60536;
   886  00024E  0E78               	movlw	120
   887  000250  6ED6               	movwf	214,c	;volatile
   888  000252                     
   889                           ;TIMER.c: 90:         INTCONbits.TMR0IF=0;
   890  000252  94F2               	bcf	242,2,c	;volatile
   891  000254                     i2l67:
   892  000254  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   893  000256  0011               	retfie		f
   894  000258                     __end_of_timer_0:
   895                           	callstack 0
   896  0000                     
   897                           	psect	rparam
   898  0000                     
   899                           	psect	temp
   900  000019                     btemp:
   901                           	callstack 0
   902  000019                     	ds	1
   903  0000                     int$flags	set	btemp
   904  0000                     wtemp8	set	btemp+1
   905  0000                     ttemp5	set	btemp+1
   906  0000                     ttemp6	set	btemp+4
   907  0000                     ttemp7	set	btemp+8
   908                           
   909                           	psect	idloc
   910                           
   911                           ;Config register IDLOC0 @ 0x200000
   912                           ;	unspecified, using default values
   913  200000                     	org	2097152
   914  200000  FF                 	db	255
   915                           
   916                           ;Config register IDLOC1 @ 0x200001
   917                           ;	unspecified, using default values
   918  200001                     	org	2097153
   919  200001  FF                 	db	255
   920                           
   921                           ;Config register IDLOC2 @ 0x200002
   922                           ;	unspecified, using default values
   923  200002                     	org	2097154
   924  200002  FF                 	db	255
   925                           
   926                           ;Config register IDLOC3 @ 0x200003
   927                           ;	unspecified, using default values
   928  200003                     	org	2097155
   929  200003  FF                 	db	255
   930                           
   931                           ;Config register IDLOC4 @ 0x200004
   932                           ;	unspecified, using default values
   933  200004                     	org	2097156
   934  200004  FF                 	db	255
   935                           
   936                           ;Config register IDLOC5 @ 0x200005
   937                           ;	unspecified, using default values
   938  200005                     	org	2097157
   939  200005  FF                 	db	255
   940                           
   941                           ;Config register IDLOC6 @ 0x200006
   942                           ;	unspecified, using default values
   943  200006                     	org	2097158
   944  200006  FF                 	db	255
   945                           
   946                           ;Config register IDLOC7 @ 0x200007
   947                           ;	unspecified, using default values
   948  200007                     	org	2097159
   949  200007  FF                 	db	255
   950                           
   951                           	psect	config
   952                           
   953                           ;Config register CONFIG1L @ 0x300000
   954                           ;	unspecified, using default values
   955                           ;	PLL Prescaler Selection bits
   956                           ;	PLLDIV = 0x0, unprogrammed default
   957                           ;	System Clock Postscaler Selection bits
   958                           ;	CPUDIV = 0x0, unprogrammed default
   959                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   960                           ;	USBDIV = 0x0, unprogrammed default
   961  300000                     	org	3145728
   962  300000  00                 	db	0
   963                           
   964                           ;Config register CONFIG1H @ 0x300001
   965                           ;	unspecified, using default values
   966                           ;	Oscillator Selection bits
   967                           ;	FOSC = 0x5, unprogrammed default
   968                           ;	Fail-Safe Clock Monitor Enable bit
   969                           ;	FCMEN = 0x0, unprogrammed default
   970                           ;	Internal/External Oscillator Switchover bit
   971                           ;	IESO = 0x0, unprogrammed default
   972  300001                     	org	3145729
   973  300001  05                 	db	5
   974                           
   975                           ;Config register CONFIG2L @ 0x300002
   976                           ;	unspecified, using default values
   977                           ;	Power-up Timer Enable bit
   978                           ;	PWRT = 0x1, unprogrammed default
   979                           ;	Brown-out Reset Enable bits
   980                           ;	BOR = 0x3, unprogrammed default
   981                           ;	Brown-out Reset Voltage bits
   982                           ;	BORV = 0x3, unprogrammed default
   983                           ;	USB Voltage Regulator Enable bit
   984                           ;	VREGEN = 0x0, unprogrammed default
   985  300002                     	org	3145730
   986  300002  1F                 	db	31
   987                           
   988                           ;Config register CONFIG2H @ 0x300003
   989                           ;	unspecified, using default values
   990                           ;	Watchdog Timer Enable bit
   991                           ;	WDT = 0x1, unprogrammed default
   992                           ;	Watchdog Timer Postscale Select bits
   993                           ;	WDTPS = 0xF, unprogrammed default
   994  300003                     	org	3145731
   995  300003  1F                 	db	31
   996                           
   997                           ; Padding undefined space
   998  300004                     	org	3145732
   999  300004  FF                 	db	255
  1000                           
  1001                           ;Config register CONFIG3H @ 0x300005
  1002                           ;	unspecified, using default values
  1003                           ;	CCP2 MUX bit
  1004                           ;	CCP2MX = 0x1, unprogrammed default
  1005                           ;	PORTB A/D Enable bit
  1006                           ;	PBADEN = 0x1, unprogrammed default
  1007                           ;	Low-Power Timer 1 Oscillator Enable bit
  1008                           ;	LPT1OSC = 0x0, unprogrammed default
  1009                           ;	MCLR Pin Enable bit
  1010                           ;	MCLRE = 0x1, unprogrammed default
  1011  300005                     	org	3145733
  1012  300005  83                 	db	131
  1013                           
  1014                           ;Config register CONFIG4L @ 0x300006
  1015                           ;	unspecified, using default values
  1016                           ;	Stack Full/Underflow Reset Enable bit
  1017                           ;	STVREN = 0x1, unprogrammed default
  1018                           ;	Single-Supply ICSP Enable bit
  1019                           ;	LVP = 0x1, unprogrammed default
  1020                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1021                           ;	ICPRT = 0x0, unprogrammed default
  1022                           ;	Extended Instruction Set Enable bit
  1023                           ;	XINST = 0x0, unprogrammed default
  1024                           ;	Background Debugger Enable bit
  1025                           ;	DEBUG = 0x1, unprogrammed default
  1026  300006                     	org	3145734
  1027  300006  85                 	db	133
  1028                           
  1029                           ; Padding undefined space
  1030  300007                     	org	3145735
  1031  300007  FF                 	db	255
  1032                           
  1033                           ;Config register CONFIG5L @ 0x300008
  1034                           ;	unspecified, using default values
  1035                           ;	Code Protection bit
  1036                           ;	CP0 = 0x1, unprogrammed default
  1037                           ;	Code Protection bit
  1038                           ;	CP1 = 0x1, unprogrammed default
  1039                           ;	Code Protection bit
  1040                           ;	CP2 = 0x1, unprogrammed default
  1041                           ;	Code Protection bit
  1042                           ;	CP3 = 0x1, unprogrammed default
  1043  300008                     	org	3145736
  1044  300008  0F                 	db	15
  1045                           
  1046                           ;Config register CONFIG5H @ 0x300009
  1047                           ;	unspecified, using default values
  1048                           ;	Boot Block Code Protection bit
  1049                           ;	CPB = 0x1, unprogrammed default
  1050                           ;	Data EEPROM Code Protection bit
  1051                           ;	CPD = 0x1, unprogrammed default
  1052  300009                     	org	3145737
  1053  300009  C0                 	db	192
  1054                           
  1055                           ;Config register CONFIG6L @ 0x30000A
  1056                           ;	unspecified, using default values
  1057                           ;	Write Protection bit
  1058                           ;	WRT0 = 0x1, unprogrammed default
  1059                           ;	Write Protection bit
  1060                           ;	WRT1 = 0x1, unprogrammed default
  1061                           ;	Write Protection bit
  1062                           ;	WRT2 = 0x1, unprogrammed default
  1063                           ;	Write Protection bit
  1064                           ;	WRT3 = 0x1, unprogrammed default
  1065  30000A                     	org	3145738
  1066  30000A  0F                 	db	15
  1067                           
  1068                           ;Config register CONFIG6H @ 0x30000B
  1069                           ;	unspecified, using default values
  1070                           ;	Configuration Register Write Protection bit
  1071                           ;	WRTC = 0x1, unprogrammed default
  1072                           ;	Boot Block Write Protection bit
  1073                           ;	WRTB = 0x1, unprogrammed default
  1074                           ;	Data EEPROM Write Protection bit
  1075                           ;	WRTD = 0x1, unprogrammed default
  1076  30000B                     	org	3145739
  1077  30000B  E0                 	db	224
  1078                           
  1079                           ;Config register CONFIG7L @ 0x30000C
  1080                           ;	unspecified, using default values
  1081                           ;	Table Read Protection bit
  1082                           ;	EBTR0 = 0x1, unprogrammed default
  1083                           ;	Table Read Protection bit
  1084                           ;	EBTR1 = 0x1, unprogrammed default
  1085                           ;	Table Read Protection bit
  1086                           ;	EBTR2 = 0x1, unprogrammed default
  1087                           ;	Table Read Protection bit
  1088                           ;	EBTR3 = 0x1, unprogrammed default
  1089  30000C                     	org	3145740
  1090  30000C  0F                 	db	15
  1091                           
  1092                           ;Config register CONFIG7H @ 0x30000D
  1093                           ;	unspecified, using default values
  1094                           ;	Boot Block Table Read Protection bit
  1095                           ;	EBTRB = 0x1, unprogrammed default
  1096  30000D                     	org	3145741
  1097  30000D  40                 	db	64
  1098                           tosu	equ	0xFFF
  1099                           tosh	equ	0xFFE
  1100                           tosl	equ	0xFFD
  1101                           stkptr	equ	0xFFC
  1102                           pclatu	equ	0xFFB
  1103                           pclath	equ	0xFFA
  1104                           pcl	equ	0xFF9
  1105                           tblptru	equ	0xFF8
  1106                           tblptrh	equ	0xFF7
  1107                           tblptrl	equ	0xFF6
  1108                           tablat	equ	0xFF5
  1109                           prodh	equ	0xFF4
  1110                           prodl	equ	0xFF3
  1111                           indf0	equ	0xFEF
  1112                           postinc0	equ	0xFEE
  1113                           postdec0	equ	0xFED
  1114                           preinc0	equ	0xFEC
  1115                           plusw0	equ	0xFEB
  1116                           fsr0h	equ	0xFEA
  1117                           fsr0l	equ	0xFE9
  1118                           wreg	equ	0xFE8
  1119                           indf1	equ	0xFE7
  1120                           postinc1	equ	0xFE6
  1121                           postdec1	equ	0xFE5
  1122                           preinc1	equ	0xFE4
  1123                           plusw1	equ	0xFE3
  1124                           fsr1h	equ	0xFE2
  1125                           fsr1l	equ	0xFE1
  1126                           bsr	equ	0xFE0
  1127                           indf2	equ	0xFDF
  1128                           postinc2	equ	0xFDE
  1129                           postdec2	equ	0xFDD
  1130                           preinc2	equ	0xFDC
  1131                           plusw2	equ	0xFDB
  1132                           fsr2h	equ	0xFDA
  1133                           fsr2l	equ	0xFD9
  1134                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     12      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_visualizar_decseg
    _main->_visualizar_min
    _main->_visualizar_seg

Critical Paths under _timer_0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer_0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer_0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timer_0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _timer_0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     339
                                              6 COMRAM     6     6      0
                             _TIMER0
                _inicializar_puertos
                  _visualizar_decseg
                     _visualizar_min
                     _visualizar_seg
 ---------------------------------------------------------------------------------
 (1) _visualizar_seg                                       6     4      2      90
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _visualizar_min                                       6     4      2      90
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _visualizar_decseg                                    6     4      2      90
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _inicializar_puertos                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TIMER0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _timer_0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TIMER0
   _inicializar_puertos
   _visualizar_decseg
   _visualizar_min
   _visualizar_seg

 _timer_0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      C      18       1       25.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      20        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Oct 04 19:20:58 2020

                           _H 0005                             _L 0003                            l50 02E0  
                          l70 019A                            l47 02C4                            l73 01D8  
                          l82 0102                            l76 006A                            l85 0140  
                          l79 00A8                           _BCD 0001                           l901 004E  
                         l911 00B2                           l903 0072                           l761 02A0  
                         l921 010A                           l913 00BA                           l905 00A0  
                         l771 02D8                           l763 02C6                           l923 0138  
                         l915 00D6                           l931 0264                           l773 02DA  
                         l765 02CC                           l917 00E2                           l909 00AA  
                         l941 0288                           l933 0268                           l775 02DC  
                         l767 02D4                           l919 00E6                           l943 0294  
                         l935 0274                           l927 0258                           l777 02DE  
                         l769 02D6                           l881 017A                           l873 0142  
                         l937 0278                           l929 0260                           l883 017E  
                         l875 014A                           l891 0012                           l939 0284  
                         l885 01A2                           l877 0152                           l893 001A  
                         l887 01D0                           l879 016E                           l895 0022  
                         l897 003E                           l899 004A                           u110 016E  
                         u111 016A                           u120 019A                           u121 0196  
                         u130 003E                           u131 003A                           u140 006A  
                         u141 0066                           u150 00D6                           u151 00D2  
                         u160 0102                           u161 00FE                           _min 000B  
                         _seg 0009                           wreg 000FE8                          i2l66 024A  
                        i2l67 0254                          _main 0258                          btemp 0019  
                        start 000E                  ___param_bank 000000                         ?_main 000D  
                       i2l851 01DC                         i2l861 020E                         i2l853 01EA  
                       i2l871 0252                         i2l863 0222                         i2l855 01EE  
                       i2l865 0226                         i2l857 0202                         i2l867 022E  
                       i2l859 0206                         i2l869 0242                         _TMR0H 000FD7  
                       _TMR0L 000FD6                         _PORTA 000F80                         _PORTB 000F81  
                       _PORTC 000F82                         _PORTD 000F83                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94                         _TRISD 000F95  
__size_of_inicializar_puertos 0026                         main@x 0013                         main@y 0015  
                       main@z 0017               __end_of_timer_0 0258                         ttemp5 001A  
                       ttemp6 001D                         ttemp7 0021                         status 000FD8  
                       wtemp8 001A               __initialization 02E2                  __end_of_main 02A0  
                      ??_main 0013                 __activetblptr 000000                        _ADCON1 000FC1  
                      _TIMER0 02C6                        i2u7_40 01EA                        i2u7_41 01E6  
                      i2u8_40 0202                        i2u8_41 01FE                        i2u9_40 0222  
                      i2u9_41 021E                        clear_0 02E8       __size_of_visualizar_min 0098  
     __size_of_visualizar_seg 0098                     ??_timer_0 000D                    __accesstop 0060  
     __end_of__initialization 02EE                 ___rparam_used 000001        visualizar_decseg@valor 0011  
              __pcstackCOMRAM 000D                       ?_TIMER0 000D           _inicializar_puertos 02A0  
                     i2u10_40 0242                       i2u10_41 023E          ?_inicializar_puertos 000D  
             __size_of_TIMER0 001C                       __Hparam 0000                       __Lparam 0000  
                     _dec_seg 0007                       __pcinit 02E2                       __ramtop 0800  
                     __ptext0 0258                       __ptext1 0012                       __ptext2 00AA  
                     __ptext3 0142                       __ptext4 02A0                       __ptext5 02C6  
                   _T0CONbits 000FD5                _visualizar_min 00AA                _visualizar_seg 0012  
                     _timer_0 0008         ??_inicializar_puertos 000D             _visualizar_decseg 0142  
              __pintcode_body 01DA          end_of_initialization 02EE            ?_visualizar_decseg 000D  
                     int_func 01DA           ??_visualizar_decseg 000F                       postinc0 000FEE  
      __end_of_visualizar_min 0142        __end_of_visualizar_seg 00AA     __end_of_visualizar_decseg 01DA  
              __end_of_TIMER0 02E2               ?_visualizar_min 000D               ?_visualizar_seg 000D  
         start_initialization 02E2                      ??_TIMER0 000D                   __pbssCOMRAM 0001  
  __size_of_visualizar_decseg 0098                     __pintcode 0008                      ?_timer_0 000D  
 __end_of_inicializar_puertos 02C6                      __Hrparam 0000                      __Lrparam 0000  
            ??_visualizar_min 000F              ??_visualizar_seg 000F           visualizar_min@valor 0011  
         visualizar_seg@valor 0011              __size_of_timer_0 0250                 __size_of_main 0048  
                    int$flags 0019                    _INTCONbits 000FF2                      intlevel2 0000  
